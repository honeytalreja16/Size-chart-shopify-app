import React, { useCallback, useState } from "react";
import { useEffect } from "react";
import { useAuthenticatedFetch } from "../../hooks/useAuthenticatedFetch";
import {
  Layout,
  LegacyCard,
  LegacyStack,
  List,
  Page,
  Frame,
  Modal,
  Spinner,
  TextContainer,
} from "@shopify/polaris";
import { useSelector } from "react-redux";
import { useNavigate } from "@shopify/app-bridge-react";
import { Redirect } from "@shopify/app-bridge/actions";

const index = () => {
  const fetch = useAuthenticatedFetch();
  const [allPlans, setAllPlans] = useState([]);
  const [baseUrl, setBaseUrl] = useState("");
  const [loading, setLoading] = useState(false);
  const { settingsData, settingsDataLoading, updateSettingsDataLoading } =
    useSelector((states) => states.webiator);
  const navigate = useNavigate();
  useEffect(() => {
    const getPlans = async () => {
      try {
        const res = await fetch("/api/getSubscriptionPlans");
        const jsonData = await res.json();
        setAllPlans(jsonData);
      } catch (error) {}
    };
    getPlans();
  }, []);

  const [active, setActive] = useState(false);

  const handleDeleteModalChange = useCallback(
    () => setActive(!active),
    [active]
  );

  const handleCancelPlan = async () => {
    try {
      handleDeleteModalChange();
      setLoading(true);
      const res = await fetch("/api/cancelSubscription", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ planId: settingsData?.activePlanId }),
      });
      const resJson = await res.json();
    } catch (error) {
    } finally {
      setLoading(false);
      navigate("/cancel-plan");
    }
  };
  const handleBuyPlan = async (planToBuy) => {
    try {
      setLoading(true);
      const res = await fetch("/api/createSubscriptionPlan", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(planToBuy),
      });
      const jsondata = await res.json();
      if (jsondata?.confirmationUrl) {
        navigate(jsondata?.confirmationUrl);
      }
    } catch (error) {
    } finally {
      setLoading(false);
    }
  };

  return (
    <Frame>
      <Page>
        {loading && (
          <div
            style={{
              height: "100vh",
              width: " 100vw",
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              position: "fixed",
              left: "0",
              top: "0",
              background: "#0000004f",
              zIndex: "100",
            }}
          >
            <Spinner />
          </div>
        )}
        <Layout>
          <Layout.Section>
            <div
              style={{
                display: "flex",
                justifyContent: "center",
                flexWrap: "wrap",
                gap: "25px",
              }}
            >
              {allPlans.map((plan, index) => (
                <div
                  className={`wt-plan-card ${
                    plan.paidPlan === settingsData?.isPaidUser
                      ? "selected-plan-card"
                      : ""
                  }`}
                  key={index}
                >
                  <div className="wt-plan-card-section">
                    <div className="wt_plan_svg">
                      {plan.paidPlan && (
                        <svg
                          id="paid_plan_svg"
                          enableBackground="new 0 0 512 512"
                          viewBox="0 0 512 512"
                          width="60"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g>
                            <path
                              d="m109.686 56.91c-45.84 0-83 37.16-83 83s37.16 83 83 83 83-37.16 83-83-37.16-83-83-83zm0 136c-29.22 0-53-23.78-53-53 0-29.23 23.78-53 53-53s53 23.77 53 53c0 29.22-23.78 53-53 53z"
                              fill="#ffc344"
                            ></path>
                            <path
                              d="m401.686 56.91c-45.84 0-83 37.16-83 83s37.16 83 83 83 83-37.16 83-83-37.16-83-83-83zm0 136c-29.22 0-53-23.78-53-53 0-29.23 23.78-53 53-53s53 23.77 53 53c0 29.22-23.78 53-53 53z"
                              fill="#ffc344"
                            ></path>
                            <path
                              d="m330.91 270.696-12.493 2.098c-20.027 3.363-34.695 20.7-34.695 41.007v53.639h-56.07v-53.639c0-20.307-14.668-37.644-34.695-41.007l-12.496-2.098c-49.346-8.287-83.95-53.228-79.348-103.053l14.119-152.875c.38-4.117 3.834-7.267 7.969-7.267h264.964c4.135 0 7.589 3.15 7.969 7.267l14.125 152.872c4.603 49.825-30.001 94.769-79.349 103.056z"
                              fill="#ffe177"
                            ></path>
                            <g>
                              <path
                                d="m410.258 167.639-14.124-152.872c-.38-4.117-3.834-7.267-7.969-7.267h-21.414l13.507 146.19c4.604 49.826-30 94.77-79.348 103.057l-.103.017c-27.179 4.564-47.085 28.092-47.085 55.651v55.024h30v-53.639c0-20.307 14.668-37.644 34.695-41.007l12.493-2.098c49.348-8.286 83.952-53.23 79.348-103.056z"
                                fill="#ffd15b"
                              ></path>
                            </g>
                            <path
                              d="m326.442 403.667h-141.513v-26.427c0-5.415 4.389-9.804 9.804-9.804h121.905c5.415 0 9.804 4.389 9.804 9.804z"
                              fill="#fe7d43"
                            ></path>
                            <path
                              d="m316.638 367.436h-30c5.415 0 9.804 4.389 9.804 9.804v26.427h30v-26.427c.001-5.415-4.389-9.804-9.804-9.804z"
                              fill="#fd6930"
                            ></path>
                            <path
                              d="m364.726 504.5h-218.08c-12.756 0-23.097-10.341-23.097-23.097v-54.64c0-12.756 10.341-23.097 23.097-23.097h218.08c12.756 0 23.097 10.341 23.097 23.097v54.64c0 12.756-10.341 23.097-23.097 23.097z"
                              fill="#98bce5"
                            ></path>
                            <path
                              d="m364.726 403.667h-30c12.756 0 23.097 10.341 23.097 23.097v54.64c0 12.756-10.341 23.097-23.097 23.097h30c12.756 0 23.097-10.341 23.097-23.097v-54.64c0-12.757-10.341-23.097-23.097-23.097z"
                              fill="#7bacdf"
                            ></path>
                            <path
                              d="m277.768 475.436h-44.164c-10.665 0-19.31-8.645-19.31-19.31 0-10.665 8.645-19.31 19.31-19.31h44.164c10.665 0 19.31 8.645 19.31 19.31 0 10.664-8.646 19.31-19.31 19.31z"
                              fill="#ffe177"
                            ></path>
                            <path
                              d="m269.493 78.198 5.345 10.847c2.649 5.376 7.77 9.102 13.694 9.964l11.953 1.739c12.629 1.838 17.672 17.382 8.534 26.303l-8.649 8.443c-4.287 4.185-6.243 10.214-5.231 16.123l2.042 11.922c2.157 12.597-11.045 22.204-22.341 16.256l-10.691-5.629c-5.299-2.79-11.629-2.79-16.927 0l-10.691 5.629c-11.296 5.948-24.498-3.659-22.341-16.256l2.042-11.922c1.012-5.909-.944-11.938-5.231-16.123l-8.649-8.443c-9.139-8.921-4.096-24.465 8.534-26.303l11.953-1.739c5.924-.862 11.045-4.588 13.694-9.964l5.345-10.847c5.648-11.461 21.967-11.461 27.615 0z"
                              fill="#ffc344"
                            ></path>
                            <g>
                              <path
                                d="m300.485 100.749-11.953-1.739c-5.924-.862-11.045-4.588-13.694-9.964l-5.345-10.847c-5.648-11.461-21.967-11.461-27.615 0l-2.723 5.526c.114.208.232.412.338.628l5.345 10.847c2.649 5.376 7.77 9.102 13.694 9.964l11.953 1.739c12.629 1.838 17.672 17.382 8.534 26.303l-8.649 8.443c-4.287 4.185-6.243 10.214-5.231 16.123l2.042 11.922c.36 2.104.284 4.121-.132 6l7.791 4.102c11.296 5.948 24.498-3.659 22.341-16.256l-2.042-11.922c-1.012-5.909.944-11.938 5.231-16.123l8.649-8.443c9.139-8.921 4.096-24.465-8.534-26.303z"
                                fill="#feb237"
                              ></path>
                            </g>
                            <g>
                              <path d="m492.186 139.91c0-48.158-37.811-87.646-85.305-90.347l-3.279-35.487c-.743-8.025-7.378-14.076-15.437-14.076h-187.326c-9.864.313-9.967 14.661 0 15h187.326c.262 0 .477.197.501.457l14.124 152.873c4.219 45.66-27.899 87.376-73.122 94.97 0 0-12.492 2.098-12.492 2.098-23.729 3.985-40.953 24.342-40.953 48.404v46.135h-41.07v-46.135c0-24.062-17.223-44.419-40.954-48.404l-12.496-2.098c-45.22-7.594-77.339-49.308-73.123-94.967l14.119-152.875c.024-.262.24-.458.501-.458h42.254c4.142 0 7.5-3.358 7.5-7.5s-3.358-7.5-7.5-7.5h-42.254c-8.06 0-14.696 6.052-15.438 14.077l-3.277 35.486c-115.246 10.179-111.81 175.634 3.976 180.831 15.48 25.297 41.491 42.864 70.758 47.697 0 0 12.496 2.098 12.496 2.098 16.478 2.767 28.438 16.903 28.438 33.611v46.135h-25.419c-9.542 0-17.304 7.762-17.304 17.304v18.927h-30.783c-16.871 0-30.597 13.726-30.597 30.597v54.64c0 16.871 13.726 30.597 30.597 30.597h159.065c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5h-159.066c-8.6 0-15.597-6.997-15.597-15.597v-54.64c0-8.6 6.997-15.597 15.597-15.597h218.08c8.6 0 15.597 6.997 15.597 15.597v54.64c0 8.6-6.997 15.597-15.597 15.597h-23.117c-9.94.309-9.885 14.709 0 15h23.117c16.871 0 30.597-13.726 30.597-30.597v-54.64c0-16.871-13.726-30.597-30.597-30.597h-30.783v-18.926c0-9.542-7.763-17.304-17.304-17.304h-25.416v-46.135c0-16.708 11.96-30.844 28.438-33.611l12.492-2.098c29.264-4.833 55.281-22.402 70.758-47.698 49.339-.658 89.275-40.991 89.275-90.484zm-398.809 42.486c-42.031-16.035-37.117-77.822 6.875-86.998-.688 11.64-8.147 76.736-6.875 86.998zm-59.191-42.486c0-39.406 30.351-71.838 68.9-75.194l-1.407 15.232c-66 9.25-70.816 102.83-6.045 118.797 1.216 5.493 2.882 10.877 4.983 16.102-37.368-4.497-66.431-36.377-66.431-74.937zm284.757 237.33v18.927h-126.514v-18.927c0-1.27 1.034-2.304 2.304-2.304.078.004 32.848-.007 32.919.004 20.679.003 68.796-.005 88.987-.004 1.27 0 2.304 1.034 2.304 2.304zm98.783-210.291-6.611-71.55c44.023 9.191 48.887 70.977 6.879 86.997.291-5.113.21-10.274-.268-15.447zm-6.971 47.897c2.101-5.225 3.767-10.608 4.983-16.102 64.811-15.992 59.913-109.564-6.05-118.796l-1.407-15.233c89.882 10.025 91.785 137.254 2.474 150.131z"></path>
                              <path d="m233.604 429.315c-35.507 1.342-35.52 52.274 0 53.62h44.164c14.783 0 26.81-12.027 26.81-26.81s-12.026-26.81-26.81-26.81zm55.973 26.81c0 6.512-5.298 11.81-11.81 11.81h-44.164c-6.512 0-11.81-5.298-11.81-11.81s5.298-11.81 11.81-11.81h44.164c6.512 0 11.81 5.298 11.81 11.81z"></path>
                              <path d="m205.762 140.862c2.523 2.463 3.673 6.011 3.078 9.49l-2.042 11.922c-2.733 13.556 8.879 27.13 22.548 26.818 6.789.5 15.488-5.363 21.371-8.288 3.112-1.639 6.828-1.638 9.938 0 0 0 10.69 5.629 10.69 5.629 16.463 8.949 36.646-5.727 33.227-24.159 0 0-2.042-11.921-2.042-11.921-.596-3.479.555-7.027 3.078-9.491l8.648-8.443c6.287-6.138 8.505-15.145 5.786-23.504-2.716-8.351-9.797-14.323-18.479-15.587l-11.953-1.74c-3.48-.506-6.488-2.696-8.046-5.858l-5.346-10.847c-3.886-7.883-11.754-12.78-20.536-12.78-8.781 0-16.65 4.897-20.535 12.781l-5.345 10.847c-1.558 3.162-4.566 5.352-8.047 5.858 0 0-11.953 1.74-11.953 1.74-18.564 2.45-26.279 26.187-12.692 39.091.003-.001 8.652 8.442 8.652 8.442zm-.17-27.308c.952-2.928 3.335-4.94 6.374-5.382l11.952-1.74c8.37-1.218 15.601-6.478 19.342-14.071l5.345-10.847c2.591-5.811 11.569-5.824 14.16 0 0 0 5.346 10.845 5.346 10.845 3.74 7.594 10.971 12.854 19.342 14.072 0 0 11.952 1.74 11.952 1.74 3.039.442 5.422 2.454 6.374 5.382.955 2.938.207 5.978-2 8.132 0 0-8.648 8.443-8.648 8.443-6.052 5.908-8.812 14.415-7.385 22.756l2.042 11.922c1.316 6.219-5.929 11.541-11.454 8.354 0 0-10.69-5.629-10.69-5.629-7.487-3.943-16.429-3.943-23.916 0 0 0-10.691 5.629-10.691 5.629-5.516 3.176-12.78-2.124-11.454-8.354 0 0 2.041-11.922 2.041-11.922 1.428-8.34-1.333-16.847-7.384-22.755 0 0-8.649-8.443-8.649-8.443-2.207-2.155-2.955-5.195-1.999-8.132z"></path>
                            </g>
                          </g>
                        </svg>
                      )}
                      {!plan.paidPlan && (
                        <svg
                          id="free_plan_svg"
                          enableBackground="new 0 0 511.934 511.934"
                          viewBox="0 0 511.934 511.934"
                          width="60"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g>
                            <path
                              d="m276.974 438.074h-42.014c-14.355 0-25.993-11.637-25.993-25.993v-78.007h94v78.007c0 14.355-11.637 25.993-25.993 25.993z"
                              fill="#b3ceec"
                            ></path>
                            <path
                              d="m272.967 334.074v78.007c0 14.356-11.637 25.993-25.993 25.993h30c14.356 0 25.993-11.637 25.993-25.993v-78.007z"
                              fill="#98bce5"
                            ></path>
                            <circle
                              cx="255.738"
                              cy="205.434"
                              fill="#ffe177"
                              r="146.214"
                            ></circle>
                            <path
                              d="m255.738 59.22c-5.064 0-10.068.258-15 .761 73.705 7.511 131.214 69.766 131.214 145.454s-57.509 137.943-131.214 145.454c4.932.503 9.936.761 15 .761 80.752 0 146.214-65.462 146.214-146.214s-65.462-146.216-146.214-146.216z"
                              fill="#ffd15b"
                            ></path>
                            <circle
                              cx="255.738"
                              cy="124.434"
                              fill="#fe7d43"
                              r="18"
                            ></circle>
                            <path
                              d="m298.967 406.907h-86c-8.284 0-15-6.716-15-15 0-8.284 6.716-15 15-15h86c8.284 0 15 6.716 15 15 0 8.284-6.716 15-15 15z"
                              fill="#98bce5"
                            ></path>
                            <path
                              d="m298.967 376.907h-30c8.284 0 15 6.716 15 15s-6.716 15-15 15h30c8.284 0 15-6.716 15-15s-6.716-15-15-15z"
                              fill="#7bacdf"
                            ></path>
                            <g>
                              <path d="m255.739 51.72c-33.842 0-65.944 10.785-92.835 31.19-3.3 2.504-3.945 7.208-1.441 10.508 2.503 3.3 7.209 3.945 10.508 1.441 133.568-96.269 292.667 70.599 190.256 199.473-4.13 4.67-.414 12.481 5.752 12.308 2.145 0 4.275-.915 5.759-2.69 83.395-98.269 11.034-253.183-117.999-252.23z"></path>
                              <path d="m255.967 30.934c4.142 0 7.5-3.358 7.5-7.5v-16c-.304-9.909-14.694-9.915-15 0v16c0 4.142 3.358 7.5 7.5 7.5z"></path>
                              <path d="m158.472 51.567c5.25 8.449 17.679 1.209 12.99-7.5 0 0-8-13.856-8-13.856-5.216-8.429-17.684-1.24-12.99 7.5 0 0 8 13.856 8 13.856z"></path>
                              <path d="m353.462 359.301c-5.217-8.429-17.684-1.241-12.99 7.5 0 0 8 13.856 8 13.856 5.25 8.448 17.679 1.209 12.99-7.5 0 0-8-13.856-8-13.856z"></path>
                              <path d="m80.744 112.929 13.856 8c3.524 2.053 8.162.875 10.245-2.745 2.071-3.587.842-8.174-2.745-10.245l-13.856-8c-8.733-4.693-15.934 7.769-7.5 12.99z"></path>
                              <path d="m431.19 297.939-13.856-8c-3.587-2.071-8.174-.842-10.245 2.745s-.842 8.174 2.745 10.245l13.856 8c1.181.682 2.471 1.006 3.743 1.006 7.539.038 10.395-10.163 3.757-13.996z"></path>
                              <path d="m81.467 205.434c0-4.142-3.358-7.5-7.5-7.5h-16c-9.909.304-9.915 14.694 0 15h16c4.142 0 7.5-3.358 7.5-7.5z"></path>
                              <path d="m453.967 197.934h-16c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h16c9.909-.304 9.915-14.694 0-15z"></path>
                              <path d="m94.6 289.939-13.856 8c-3.587 2.071-4.816 6.658-2.745 10.245 2.083 3.62 6.721 4.798 10.245 2.745 0 0 13.856-8 13.856-8 8.429-5.216 1.241-17.683-7.5-12.99z"></path>
                              <path d="m413.591 121.936c1.272 0 2.562-.324 3.743-1.006l13.856-8c8.43-5.216 1.239-17.685-7.5-12.99 0 0-13.856 8-13.856 8-6.634 3.829-3.786 14.035 3.757 13.996z"></path>
                              <path d="m168.717 356.556c-3.588-2.072-8.174-.842-10.245 2.745l-8 13.856c-4.687 8.705 7.737 15.951 12.99 7.5 0 0 8-13.856 8-13.856 2.071-3.588.842-8.174-2.745-10.245z"></path>
                              <path d="m343.217 54.313c3.524 2.053 8.162.875 10.245-2.745 0 0 8-13.856 8-13.856 4.692-8.733-7.768-15.935-12.99-7.5 0 0-8 13.856-8 13.856-2.071 3.587-.842 8.174 2.745 10.245z"></path>
                              <path d="m241.227 155.541c-3.12 0-5.914 1.932-7.016 4.85l-16.091 42.606-21.955-3.31-2.309-4.227c-5.011-8.55-17.651-1.659-13.164 7.191 0 0 4.093 7.493 4.093 7.493 1.124 2.058 3.146 3.472 5.464 3.821l31.628 4.768c3.495.529 6.886-1.459 8.134-4.766 0 0 16.401-43.426 16.401-43.426h1.827v46.566c-16.417 1.024-51.492 5.934-51.492 29.188 0 19.859 24.876 29.711 36.837 33.299v3.91c.308 9.91 14.692 9.916 15 0v-9.674c0-3.515-2.441-6.559-5.873-7.321-9.7-2.156-30.964-10.238-30.964-20.213 0-9.399 25.684-14.433 44.217-14.454 18.541.021 44.225 5.055 44.225 14.454 0 10.021-20.866 17.947-30.964 20.213-3.432.763-5.873 3.806-5.873 7.321v9.674c.298 9.904 14.696 9.919 15 0v-3.909c11.96-3.588 36.837-13.44 36.837-33.299 0-23.474-35.739-28.254-51.949-29.215v-46.539h1.827l16.401 43.426c1.238 3.32 4.702 5.302 8.134 4.766 0 0 31.628-4.768 31.628-4.768 2.318-.349 4.34-1.763 5.464-3.821l4.093-7.493c4.481-8.843-8.14-15.746-13.164-7.19 0 0-2.309 4.227-2.309 4.227l-21.955 3.31-16.091-42.606c-1.102-2.918-3.896-4.85-7.016-4.85h-7.012v-6.734c27.562-8.989 21.834-49.263-7.5-49.873-29.339.613-35.057 40.889-7.5 49.873v6.734h-7.013zm14.512-41.607c5.79 0 10.5 4.71 10.5 10.5-.528 13.91-20.474 13.907-21 0 0-5.789 4.71-10.5 10.5-10.5z"></path>
                              <path d="m310.467 372.578v-23.433c12.968-4.944 25.287-11.676 36.685-20.12 3.329-2.466 4.028-7.163 1.562-10.491-2.465-3.329-7.163-4.029-10.491-1.562-132.921 93.703-289.738-70.475-190.153-199.004 6.027-7.788-5.132-17.004-11.638-9.464-66.87 79.857-30.585 206.527 65.035 240.74v23.334c-14.573 8.478-14.566 30.186 0 38.658-.464 18.756 14.716 34.364 33.493 34.337h13.507v58.86c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-58.86h13.507c18.777.027 33.958-15.581 33.493-34.337 14.573-8.477 14.566-30.186 0-38.658zm-97.5 26.829c-9.887-.304-9.932-14.681 0-15h86c9.887.304 9.932 14.68 0 15zm42.772-40.259c13.588 0 26.908-1.747 39.729-5.159v15.418h-79v-15.351c12.54 3.317 25.701 5.092 39.271 5.092zm21.235 71.426h-42.014c-9.408 0-17.18-7.066-18.33-16.167h78.674c-1.15 9.101-8.923 16.167-18.33 16.167z"></path>
                            </g>
                          </g>
                        </svg>
                      )}
                    </div>
                    <TextContainer>
                      <p
                        style={{
                          textAlign: "center",
                          fontSize: "22px",
                          fontWeight: "bold",
                          marginBottom: "20px",
                        }}
                      >
                        {plan.title}
                      </p>
                    </TextContainer>
                    <TextContainer>
                      <p
                        style={{
                          textAlign: "center",
                          fontSize: "20px",
                          fontWeight: "bold",
                          marginBottom: "10px",
                        }}
                      >
                        {plan.paidPlan ? (
                          !settingsData?.isPaidUser ? (
                            <p>
                              <span
                                style={{
                                  textDecoration: "line-through",
                                  textDecorationColor: "red",
                                }}
                              >
                                ${plan.price}
                              </span>{" "}
                              Just{" "}
                              <span style={{ fontWeight: "bold" }}>$1</span>
                              <span style={{ fontSize: "9px" }}>
                                /month
                              </span>{" "}
                              for the first 3 months{" "}
                            </p>
                          ) : (
                            `$${plan.price}`
                          )
                        ) : (
                          <p> {plan.price}</p>
                        )}
                      </p>
                    </TextContainer>
                    <TextContainer>
                      <div
                        style={{
                          fontSize: "12px",
                          marginBottom: "20px",
                          marginTop: "20px",
                          display: "flex",
                          flexDirection: "column",
                          gap: "7px",
                          alignItems: "start",
                          minHeight: "170px",
                        }}
                      >
                        {plan.description.map((descPoint, index) => (
                          <span
                            key={index}
                            style={{
                              display: "flex",
                              gap: "10px",
                              alignItems: "center",
                            }}
                          >
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              fill="#105c11"
                              viewBox="0 0 50 50"
                              width="15px"
                              height="15px"
                            >
                              <path d="M 11 4 C 7.101563 4 4 7.101563 4 11 L 4 39 C 4 42.898438 7.101563 46 11 46 L 39 46 C 42.898438 46 46 42.898438 46 39 L 46 15 L 44 17.3125 L 44 39 C 44 41.800781 41.800781 44 39 44 L 11 44 C 8.199219 44 6 41.800781 6 39 L 6 11 C 6 8.199219 8.199219 6 11 6 L 37.40625 6 L 39 4 Z M 43.25 7.75 L 23.90625 30.5625 L 15.78125 22.96875 L 14.40625 24.4375 L 23.3125 32.71875 L 24.09375 33.4375 L 24.75 32.65625 L 44.75 9.03125 Z" />
                            </svg>
                            <p style={{ fontWeight: "500", color: "gray" }}>
                              {descPoint}
                            </p>
                          </span>
                        ))}
                      </div>
                    </TextContainer>
                    <div style={{ display: "flex", justifyContent: "center" }}>
                      {!plan.paidPlan && !settingsData?.isPaidUser && (
                        <button className="addlabelBtn" disabled>
                          Current Plan
                        </button>
                      )}
                      {!plan.paidPlan && settingsData?.isPaidUser && (
                        <button
                          className="addlabelBtn"
                          onClick={() => handleDeleteModalChange()}
                        >
                          Downgrade Plan
                        </button>
                      )}
                      {plan.paidPlan && settingsData?.isPaidUser && (
                        <button
                          className="cancelLabelBtn"
                          onClick={() => handleDeleteModalChange()}
                        >
                          Cancel Plan
                        </button>
                      )}
                      {plan.paidPlan && !settingsData?.isPaidUser && (
                        <button
                          className="addlabelBtn"
                          onClick={() => handleBuyPlan(plan)}
                        >
                          Buy Plan
                        </button>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </Layout.Section>
        </Layout>
      </Page>

      <Modal
        size="small"
        open={active}
        onClose={handleDeleteModalChange}
        title="Do you really want to cancel Premium Subscription Plan?"
        primaryAction={{
          content: "Confirm",
          onAction: handleCancelPlan,
        }}
        secondaryActions={[
          {
            content: "Cancel",
            onAction: handleDeleteModalChange,
          },
        ]}
      ></Modal>
    </Frame>
  );
};

export default index;
